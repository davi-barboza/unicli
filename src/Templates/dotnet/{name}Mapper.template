using AutoMapper;
using DesapegoSmart.Application.Features.{name}.Commands;
using DesapegoSmart.Application.ViewModels;
using DesapegoSmart.Domain.Commands.{name};
using DesapegoSmart.Domain.Dtos;
using DesapegoSmart.Domain.Entities;

namespace {project}.Mappers;

public class {name}Profile : Profile
{
    public {name}Profile()
    {
        CreateMap<{name}Model, {name}Dto>();
        CreateMap<Create{name}Command, {name}Model>();
        CreateMap<Update{name}Command, {name}Model>();
    }
}

public static class {name}Mapper
{
    public static {name}Dto ToDto(this {name}Model input)
    {
        return MapperConfig.Mapper.Map<{name}Dto>(input);
    }

    public static IReadOnlyList<{name}Dto> ToDto(this IReadOnlyList<{name}Model> input)
    {
        return MapperConfig.Mapper.Map<IReadOnlyList<{name}Dto>>(input);
    }

    public static {name}Model ToEntity(this Create{name}Command input)
    {
        return MapperConfig.Mapper.Map<{name}Model>(input);
    }

    public static {name}Model ToEntity(this Update{name}Command input, {name}Model entity)
    {
        return MapperConfig.Mapper.Map(input, entity);
    }
}